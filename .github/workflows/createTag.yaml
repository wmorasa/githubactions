name: CreateTag
 
on:
  workflow_dispatch:
    inputs:
      tagName:
        required: true
        type: string  
      version:
        required: false
      
  push:
    # branches: ['main']
      
env:
  ARTIFACTORY_REGISTRY: https://bpd01artifactory.glideportal.transurban.com.au/artifactory
  GITHUB_CONTEXT: ${{toJson(github)}}
  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  CreateTag:
    runs-on: ubuntu-latest
    # Sets the permissions granted to the `GITHUB_TOKEN` for the actions in this job.
    permissions:
      contents: write
      packages: write
 
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with: 
          fetch-depth: 0

      - name: getBranchName
        id: getBranchName
        run: |   
          # branchName=$(echo ${{github.ref_name}})
          branchName=$(echo ${{github.ref_name}})
          tagPrefix=$(echo ${branchName//"release/"/})
          echo "tagPrefix is : ${tagPrefix}"
          echo "getBranchName=$tagPrefix">> $GITHUB_OUTPUT


      - name: listTag
        run: |      
          git tag -l
   

      - name: getTag
        id: getTag
        env: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: |      
          echo "branchName is : ${{steps.getBranchName.outputs.getBranchName}}"

      - name: createTag
        id: createTag
        env: 
          github_token: ${{ secrets.GITHUB_TOKEN }}
        run: | 
          LOGFILE=/tmp/tmp.$$.out     
          echo "${{steps.getBranchName.outputs.getBranchName}}"
          #tags=$(git tag -l)
          #echo "$tags" 
          git tag -l >> ${LOGFILE}
          cat ${LOGFILE}
          # cat /tmp/tmp.out | grep "^$" | wc -l 
          TagCount=$(cat ${LOGFILE} | grep "${{steps.getBranchName.outputs.getBranchName}}" | wc -l)

          echo "TagCount ${TagCount}"

          if [ ${TagCount} -eq 0 ]
          then
             VersionNum=1
          else
            LastVersion=$(cat /tmp/tmp.out | grep "${{steps.getBranchName.outputs.getBranchName}}" | sort | tail -1 | cut -f 2 -d"-" )
            VersionNum=$(( $LastVersion + 1))
          fi

          NewTag="${{steps.getBranchName.outputs.getBranchName}}-$( echo $VersionNum | awk '{ printf "%04s", $1 }' | sed 's/ /0/g' )"
          echo "NewTag: ${NewTag}"

          git config --global user.name "${{github.actor}}"
          git config --global user.email "${{github.actor}}@users.noreply.github.com" 
          git tag -a "$NewTag" -m "tag name is $NewTag"
          git push origin $NewTag 
